buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

compileJava.options.encoding = 'UTF-8'

group = project.group_name
version = project.mod_version
archivesBaseName = "[${project.minecraft_version}]${project.mod_id}"

minecraft {
    version = project.minecraft_version + '-' + project.forge_version  // grab latest forge
    mappings = project.mappings_version
    runDir = 'run'

    //replaces in mod Reference class
    replace '@MOD_ID', project.mod_id
    replace '@MOD_NAME', project.mod_name
    replace '@MOD_VERSION@', project.mod_version
    replace '@JSON_URL@', project.forgeupdate_url

    replaceIn 'Reference.java'
}

processResources {
    // replaces in mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand ([
            'mod_version': project.mod_version,
            'forge_version': project.forge_version,
            'forge_versionlimit': project.forge_versionlimit,
            'minecraft_version': project.minecraft_version
        ])
    }

    // copy everything else
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task updateJson(type: Copy){
    from('forgeupdate')
    include('forgeupdate.json.template')
    into('forgeupdate')
    rename('forgeupdate.json.template','forgeupdate.json')
    expand([
            'mod_version': project.mod_version,
            'minecraft_version': project.minecraft_version
        ])
}

build.finalizedBy updateJson

jar {
    appendix = "universal"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.java
    appendix = 'deobf'
}

sourceJar {
    appendix = 'src'
    classifier = ''
}

artifacts {
    archives deobfJar
    archives sourceJar
}

idea {
    module {
        inheritOutputDirs = true
    }
}
